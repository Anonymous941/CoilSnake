from itertools import izip, cycle
from random import choice


def xor_crypt_string(data, key):
    return ''.join(chr(ord(x) ^ ord(y)) for (x, y) in izip(data, cycle(key)))


super_secret_data = [
    '\x10\x1b\x06\x1cs\x0c\x04\x02\x0b',
    '\x01\x01\x01\x11W\x03\x1c-\x01\x00',
    '\x01\x1b\x0c\x1bI\x0cE,\n\x0eT\x01\x1d',
    '\x1d\x11\x1c\x03I\x16\n\x1b',
    '\x16\x10\x06\x04B\r\x10\x07\n',
    '\x14\x15\x02\x15D\x03\x11\x08N.N\x1d\n\x01\rI\x0e\x00DA\x04\x11S-O\x10TJ(\x0bE\x15\x1cEa\x1c\x06\n\x15\x13\x15\x04<\x1aO#A\x14\x0c\x06\x1c',
    '\x1e\x06;\x15N\x06\x04N\x1dGe,O;\x18C\n\x07\nGJ!\x1c\x1bL',
    '\x03?O"E\x00\x0c\x1b\x1a\x0f',
    "\x07\x15\x03\x15SB\n\x0fN7kN'\x12\x1aK",
    '\x07\x1c\nPt\x07\x0b\r\x0fGt\x01\x00\x1f',
    '\x07\x1c\nPe\x03\x16\x10N4T\x17\x03\x16Ys\x15\x1b\x02FJ<\x1d\x07E\x17\x1a\x0f\x1d',
    '\x03?O8A\x01\x0eSN*R:\n\x1d\x1dAA+\x00I\x1e\x1c\x1c\x1a',
    '\x07\x11\x01\x14A\t\x17\x08\x1b\x13',
    '\x1e\x06APt\r\n\x05',
    '\x1d\x11\x18Pe\x06\x0c\x1d\x07\tGN<\x07\x0cF\x07N7O\x0c\x01\x04\x15R\x00',
    '\x1e\x1b\x01\x1fT\r\n\x05\x07',
    '\x03?O8A\x01\x0eSN3H\x0bO=\x1cX\x15N#E\x04\x10\x01\x15T\x0c\x01\x04',
    '\x1e\x06APa\x01\x06\x00\n\x02N\x1aH\x00Yf\x14\x00\x08A\x04\x11',
    '\x1e\x1b\x1b\x18E\x10E[N!U\x00\x03\x12\x17D',
    '\x1d\x11\x18Pe\x03\x17\x1d\x06\x05O\x1b\x01\x17Ys\x11\x02\rT\x1e\x1c\x1d\x13\x006\x01\x0c\x1b\x0eA\x06\r',
    '\x19\x1b\x03\x1cYB \x08\x1c\x13H\x0c\x00\x06\x17DA(\x16E\x0fU5\x1dX\x00\x1c',
    '\x1a\x06\x00\x1ep\x07\x0b\n\x07\x0b',
    '\x07\x1c\nPp\x10\n\x0e\x1c\x06MN8\x1a\rHA \x0b\x00$\x14\x1e\x11',
    '\x07\x1c\nPi\x0c\x16\x00\t\tI\x08\x06\x10\x18N\x15N0O\x05\x19',
    '\x00\x04\x03\x19TB2\x08\x1c\x14\x1aN.S7E\x16N,O\x1a\x10',
    '\x1d\x11\x18Pa\x05\x00I<\x02T\x1c\x00S1A\x02\x05',
    '\x07\x1c\nPr\x17\x0b\x08\x19\x06YN;\x1c\x16L',
    "\x12\x00\x00\x1dI\x01E9\x01\x10E\x1cO'\x16O\r",
    '\x1d\x01\x0c\x1cE\x03\x17I<\x02A\r\x1b\x1c\x0b\x005\x01\x0bL',
    "\x14\x1c\x00\x03TB\n\x0fN7kN'\x12\x1aK",
    '\x1e\x06;\x15N\x06\x04I+\x03I\x1a\x00\x01C\x00#\x01\x1eOJ=\x16\x18P\x00\n',
    '\x1c\x1a\x03\t\x00,\x00\x1e\x0c\x14\x00+\x0e\x07Yt\t\x0bDt\x0f\x1b\x17\x15K\x17\x0f\x1f\x1b',
    '\x1e\x06;\x15N\x06\x04N\x1dGd\x0f\x1b\x12Yg\x0e\x02\x01MJ3\x12\x17T\n\x1c\x13',
    '\x07\x1c\nPh\x03\x06\x02\x07\tGN\x00\x15Yr\x04\x0f\x08L\x13U6\x02E\x17\x17\x1e\x07\x10N\x13H A\x02\x06\x07\x05\x1d\x14\x037\x1d\x1c\x18\x00&\x00\x1f\x07\x04E',
    '\x1aT\x07\x11T\x07E\x10\x01\x12',
    '\x11\x1d\x00\x1eI\x01E!\x0f\x04K\x0b\x01',
    "\x03?O'A\x01\x0e",
    "'\x1c\nPT\x16\t\x10N\x06W\x0b\x1c\x1c\x14EA\n\x05T\x0bU\x1a\x1aS\x00\x1c\x1e\n\x0bM\x15\x1c\x17O\x1e",
    '\x17\x01\x01\x17E\r\x0bI#\x06N',
    '\x17\x01\x01\x17E\r\x0bI*\x12D\x0b',
    '\x07\x1c\nPr\x07\x04\x05\x02\x1e\x00/\x18\x16\nO\x0c\x0bDh\x0b\x16\x18\x1dN\x02N>\x00\x16L',
    '\x1e\x1d\x01\x15S\x15\x00\x0c\x1e\x02RN]',
    '\x00\x1b\x03\x19T\x03\x0c\x1b\x0bGV@]',
    "\x00\x1f\x066R\x07\x00IZ]\x00=\x04\x1aYf\x13\x0b\x01\x00\x05\x07S<A\x06\x05J'\x18R\x10",
    '\x07\x1c\nPr\x07\x04\x05\x02\x1e\x00+\x1f\x1a\x1a\x00$\n\rT\x05\x07S0E\x13\x07\t\n',
    '#\x1c\x0e\x1bC',
    '#\x1c\x0e\x13KBM\x19\x1c\x08N\x01\x1a\x1d\x1aE\x12NFF\x0b\x16\x18V\t',
    '\x07\x1c\nPe\x06\x0c\x1d\x01\x15\x00\x1a\x07\x12\r\x00/\x0b\x12E\x18U7\x1dE\x16N+\x18\x18Y',
    '\x15\x1d\x17\x15SB$\x05\x02Gr\x0b\x03\x12\rE\x05N0H\x03\x1b\x14\x07',
    '\x03\x06\x00\x17R\x03\x08SN.TN+\x1c\x1cSA:\x0cI\x04\x12\x00',
    '\x15\x1b\x1d\x1d\x11',
    '1\x01\x1b\x04F\x03\x17\x1d@\x02X\x0b',
    '\x03\x06\x00\x17R\x03\x08I/\x10E\x1d\x00\x1e\x1c\x004\x00\x00E\x18U?\x1dV\x00N+\x1a\x1dI\x11\x06\x06E',
    '\x17\x1b\x01\x1bE\x1bE"\x01\tGI\x1cS2O\x0f\t\x01YJ1\x1c\x1aK',
    '\x07\x1c\x06\x03\x002\x17\x06\t\x15A\x03O \rI\x0f\x05\x17',
    '\x1b\x15\x0c\x1bI\x0c\x02I/\x10E\x1d\x00\x1e\x1c\x00"\x1c\x01E\x1a\x0cS?I\x11',
    '\x15\x06\n\x15b\r\x10\x07\nGB\x17O0\x18TA"\x0bV\x0f\x07',
    '\x1d\x11\x18Pc\x03\x17',
    '4\x1b\x04\x05\x00\x07\x01\x00\x1a\x08R',
    '\x17\x11\x0e\x04HB \r\x07\x13O\x1cO1\x16U\x0f\n',
    "\x1f\x1d\t\x15\x00'\x01\x00\x1a\x08RN-\x1c\x0cN\x05",
    '\x03\x11\x01\x13I\x0eE,\x1c\x06S\x0b\x1d']


def get_fun_title():
    return xor_crypt_string(choice(super_secret_data),
                            "Stop being nosy and just enjoy the program")  # seriously come on
